name: LaTeX compiler

on:
  #triggered when PR is (re)opened or synchronized (new commit to head)
  pull_request:
    types: [opened, reopened, synchronize, closed]
    paths:
      - '**.tex'
  push:

jobs:
  compile:
    runs-on: ubuntu-latest
    outputs:
      file_path: '${{ steps.path.outputs.FILE_PATH }}'
      file_name: '${{ steps.name.outputs.FILE_NAME }}'

    steps:
      - name: Set up Git repository
        uses: actions/checkout@v3
      - name: List changed files
        id: files
        uses: tj-actions/changed-files@v40
        with:
          format: 'space-delimited'
      - name: Extract path
        id: path
        run: |
          FILES="${{ steps.files.outputs.added_modified }}"
          echo "FILE_PATH=$(dirname "$FILES")" >> $GITHUB_OUTPUT
      - name: Extract name w/o extension
        id: name
        run: |
          FILES="${{ steps.files.outputs.added_modified }}"
          echo "FILE_NAME=$(basename "${FILES}" .tex)" >> $GITHUB_OUTPUT
      - name: Output
        run: |
          echo "::notice::Modified files: ${{ steps.files.outputs.added_modified }}"
          echo "::notice::Path: ${{ steps.path.outputs.FILE_PATH }}"
          echo "::notice::File: ${{ steps.name.outputs.FILE_NAME }}"
      - name: Create mock PDF
        run: |
          touch ${{ github.workspace }}/test.pdf
      #- name: Compile LaTeX document
      #  uses: xu-cheng/latex-action@v3
      #  with:
      #    root_file: |
      #      ${{ steps.name.outputs.FILE_NAME }}.tex
      #    working_directory: ${{ github.workspace }}/${{ steps.path.outputs.FILE_PATH }}
      - name: Publish artifact
        uses: actions/upload-artifact@v3
        with:
          name: test.pdf
          path: ${{ github.workspace }}/test.pdf
          if-no-files-found: error

  publish:
    #if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: compile

    steps:
      - name: Set up Git repository
        uses: actions/checkout@v3

      - name: Configure Git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git fetch

      - name: Clean up
        env:
          TARGET_BRANCH: 'docs'
        run: |
          git checkout $TARGET_BRANCH
          rm -f /test.pdf
          git rm --ignore-unmatch /test.pdf
          
      - name: Grab document
        uses: actions/download-artifact@v3
        with:
          name: test.pdf
          path: ${{ github.workspace }}

      - name: Publish document
        env:
          TARGET_BRANCH: 'docs'
        run: 
          git checkout ${GITHUB_HEAD_REF##*/}
          git add ${{ github.workspace }}/test.pdf
          git diff-index --quiet HEAD || git commit -am "Deploy documents"
          git push origin $TARGET_BRANCH
